}
}
# Copyright 2020 Province of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and limitations under the License.
source('header.R')
#Input variables - passed to subsequent script
AOI<-'SkeenaESI'
Wshd.context<-c('Nechako','SkeenaE','SkeenaW','Nass','Coastal')
#Indicators selected for summarizing
IndicatorsW<-c('ECA_Final_PCNT', 'Rd_Density_net', 'Dam_Lines_Count', 'POD_Count', 'Mine_Points_Count', 'AU_TOT_Disturb_all_PCNT', 'RdsStrmXing_Density_net', 'RdsStrmBuff100_Density_net', 'RdSteepSlopes_Density_net', 'DDR_Score', 'Pnt_Src_Plltn_Final_Count', 'Lakes_Wetlands_PCNT', 'Summer_Sens_PCNT', 'Winter_Sens_PCNT', 'Rip_Tot_All_Dstrb_PCNT', 'Second_Growth_PCNT_net')
IndicatorsW_Label <- c('ECA','Road density', 'Dam', 'Water Licenses', 'Total Land Disturbance', 'Road Stream Crossing Density', 'Road Desnity near Streams', 'Roads on Unstable Slopes', 'Drainage Density Ruggedness', 'Point Source Pollution', 'Extent of Lakes and Wetlands', 'Summer Low Flow Sensitivity', 'Winter Low Flow Sensitivity', 'Riparian Distrubance', 'Amount of 2nd Growth')
IndUnits <- c('%','km/km2', '#', '#', '%', '#/km2', 'km/km2', 'km/km2', 'Score', '#', '%', '%', '%', '%', '%')
Thresh <- list(c(15,20),c(.4,1.2),c(1,3),c(1,3),c(25,75),c(0.16,0.32),c(0.08,0.16),c(0.06,0.12),c(2000,4000),c(1,5),c(2,20),c(5,50),c(5,50),c(5,15),c(5,25))
#Load all the data
source("01_load.R")
#Clean data, select indicators set up fields for analysis
source("02_clean.R")
#Source boxplot function
source("03_analysis_BoxPlots.R")
#Do a loop for each Major Watershed
for (i in 1:nrow(nameWshd)) {
Wshd.name <- nameWshd[i,]
#Loop through each of the indicators and generate box plot
for (j in 1:length(IndicatorsW)) {
Ind<-IndicatorsW[j]
IndL<-IndicatorsW_Label[j]
Thrsh <- Thresh[[j]]
IndU <- IndUnits[j]
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
}
}
library(sf)
library(rgdal)
library(dplyr)
library(plyr)
library(readr)
library(raster)
library(bcmaps)
library(bcdata)
library(fasterize)
library(tidyr)
library(rio)
library(WriteXLS)
library(ggplot2)
library(readxl)
library(stringr)
library(mapview)
library(gdata)
library(reshape2)
library(exactextractr)
library(plotKML)
library(purrr)
library(lubridate)
library(tibble)
library(janitor)
library(magrittr)
library(igraph)
library(rgeos)
library(rlist)
#getwd() tells you what directory you are in
#system('dir') should give you the directory listing
OutDir <- 'out'
dataOutDir <- file.path(OutDir,'data')
StrataOutDir <- file.path(dataOutDir,'Strata')
figsOutDir <- file.path(OutDir,'figures')
SpatialDir <- file.path('data','spatial')
DataDir <- file.path('data')
spatialOutDir <- file.path(OutDir,'spatial')
#Set user specific paths
SyncDirR<-file.path('../../../../Sync')
#SyncDirR<-file.path('/Users/jwfraser/Sync')
SyncDir <- file.path(SyncDirR)
FFHSpatialDir <- file.path(SyncDir,'Fish and Fish Habitat/Tier 1/Assessment/Data/BoxPlot')
ESIDir <- file.path(SyncDir,'PT and STC/Science and Technical Committee/Base Information/Data')
#Not sure we need these?
#ffhSampspatialdir <- file.path('../FFH_SkeenaESI_')
#GBdataOutDir <- file.path('../GB_Data/out/data')
#GBPDir <-file.path('../GB_Data/data/Population/Bear_Density_2018')
#ESIDir <- file.path('//spatialfiles.bcgov/work/srm/smt/Workarea/ArcProj/P17_Skeena_ESI')
#RoadDir <- file.path('/Users/jwfraser/Dropbox (BVRC)/_dev/Biodiversity/bc-raster-roads/data')
#ESIData <- file.path('//spatialfiles.bcgov/work/srm/smt/Workarea/ArcProj/P17_Skeena_ESI/Data')
#GISDir <- file.path('/Users/jwfraser/Dropbox (BVRC)/Library/GISFiles/BC/Shapefiles')
#GISSkDir <- file.path('/Users/jwfraser/Dropbox (BVRC)/Library/GISFiles/Skeena/Shapefiles')
#FREPDir<-file.path('/Users/jwfraser/Sync/Wetland/Tier 2/Data/FREP')
#Tier2Dir<-file.path('/Users/jwfraser/Sync/Wetland/Tier 2/Data')
#CGLDir<-file.path('/Users/jwfraser//Dropbox (BVRC)/Projects/UBM_LUP/data/CGL_Wetlands')
dir.create(file.path(OutDir), showWarnings = FALSE)
dir.create(file.path(dataOutDir), showWarnings = FALSE)
dir.create(file.path(StrataOutDir), showWarnings = FALSE)
dir.create(file.path(spatialOutDir), showWarnings = FALSE)
dir.create(DataDir, showWarnings = FALSE)
dir.create(figsOutDir, showWarnings = FALSE)
dir.create("tmp", showWarnings = FALSE)
#Location of Monitoring spreadsheet
#WetMonDir<-file.path('../../../Projects/ESI/Wetlands/Monitoring/2019FieldData')
#WetMonDir<-file.path('data')
#WetspatialDir <- file.path('data')
#system(paste('ls ',WetMonDir,sep=''))
<<<<<<< Updated upstream
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
=======
>>>>>>> Stashed changes
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
getwd()
print SyncDir
print(SyncDir)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
print(SyncDir)
wdir()
print(ESIDir_
wdir()
print(ESIDir)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/')
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
bcmapsdata package. To install that package, run:
install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/')
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/')
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${C:\Users\JWFRASER\R\rtools40\var\lib\pacman\local}"', con = "~/.Renviron")
writeLines('PATH="C:\Users\JWFRASER\R\rtools40\var\lib\pacman\local"', con = "~/.Renviron")
writeLines(PATH="C:\Users\JWFRASER\R\rtools40\var\lib\pacman\local"', con = "~/.Renviron")
writeLines(PATH="C:\Users\JWFRASER\R\rtools40\var\lib\pacman\local", con = "~/.Renviron")
writeLines('PATH="C:\Users\JWFRASER\R\\usr\\bin;\var\lib\pacman\local"', con = "~/.Renviron")
writeLines('PATH="C:/Users/JWFRASER/R/usr/bin;/var/lib/pacman/local"', con = "~/.Renviron")
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
Sys.which("make")
install.packages("jsonlite", type = "source")
writeLines('PATH="C:/Program Files/R/usr/bin;doc"', con = "~/.Renviron")
update.packages(checkBuilt=Ture)
update.packages(checkBuilt=TRUE)
Sys.getenv("PATH")
Sys.which("stats.dll")
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
Sys.getenv("PATH")
Sys.getenv()
Sys.getenv()
Sys.which("make")
writeLines('PATH="C:\Program Files\R\rtools40\usr\;bin"', con = "~/.Renviron")
writeLines('PATH="C:/Program Files/R/rtools40/usr/;bin"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="C:/Program Files/R/rtools40/usr/;bin"', con = "~/.Renviron")
Sys.getenv()
writeLines('PATH="C:/Program Files/R/R-3.5.3;library"', con = "~/.Renviron")
Sys.getenv()
Sys.getenv()
writeLines('PATH="C:/Program Files/R/R-3.5.3/library"', con = "~/.Renviron")
Sys.getenv()
print(.libPaths())
Sys.which("stats.dll")
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
Sys.getenv()
Sys.getenv()
Sys.getenv()
writeLines('PATH="C:/Program Files/R-4.0.3;library"', con = "~/.Renviron")
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
update.packages(ask=FALSE, checkBuilt=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
Sys.getenv()
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/')
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
install.packages("devtools")
library(bcmapsdata)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
install.packages('bcmapsdata', repos='https://bcgov.github.io/drat/')
install.packages("bcmapsdata", repos = "https://bcgov.github.io/drat/")
library(devtools)
find_rtools()
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/02_clean.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
rlang::last_error()
rlang::last_trace()
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
lapply(Indicators_df, range)
Indicators_df<-Watersheds_Context[IndicatorsW]
rlang::last_error()
rlang::last_trace()
Sys.getenv()
system('dir')
Wshd.context
Wshd.context<-c('Nechako','SkeenaE','SkeenaW','Nass','Coastal')
Wshd.context
Wshd.context[1]
Thresh <- list(c(15,20),c(.4,1.2),c(1,3),c(1,3),c(25,75),c(0.16,0.32),c(0.08,0.16),c(0.06,0.12),c(2000,4000),c(1,5),c(2,20),c(5,50),c(5,50),c(5,15),c(5,25))
Thresh[1]
Thresh[1][1]
Thresh[1,1]
Thresh[2]
Thresh[[1]]
Thresh[1[2]]
Thresh[[1,1]]
Thresh[[1]][1]
View(Thresh)
source('header.R')
#Input variables - passed to subsequent script
AOI<-'SkeenaESI'
Wshd.context<-c('Nechako','SkeenaE','SkeenaW','Nass','Coastal')
#Indicators selected for summarizing
#Full
#IndicatorsW<-c('ECA_Final_PCNT', 'Rd_Density_net', 'Dam_Lines_Count', 'POD_Count', 'Mine_Points_Count', 'AU_TOT_Disturb_all_PCNT', 'RdsStrmXing_Density_net', 'RdsStrmBuff100_Density_net', 'RdSteepSlopes_Density_net', 'DDR_Score', 'Pnt_Src_Plltn_Final_Count', 'Lakes_Wetlands_PCNT', 'Summer_Sens_PCNT', 'Winter_Sens_PCNT', 'Rip_Tot_All_Dstrb_PCNT', 'Second_Growth_PCNT_net')
#Test Size
IndicatorsW<-c('ECA_Final_PCNT', 'Rd_Density_net','Dam_Lines_Count', 'Rip_Tot_All_Dstrb_PCNT')
IndicatorsW_Label <- c('ECA','Road density', 'Dam', 'Water Licenses', 'Total Land Disturbance', 'Road Stream Crossing Density', 'Road Desnity near Streams', 'Roads on Unstable Slopes', 'Drainage Density Ruggedness', 'Point Source Pollution', 'Extent of Lakes and Wetlands', 'Summer Low Flow Sensitivity', 'Winter Low Flow Sensitivity', 'Riparian Distrubance', 'Amount of 2nd Growth')
IndUnits <- c('%','km/km2', '#', '#', '%', '#/km2', 'km/km2', 'km/km2', 'Score', '#', '%', '%', '%', '%', '%')
Thresh <- list(c(15,20),c(.4,1.2),c(1,3),c(1,3),c(25,75),c(0.16,0.32),c(0.08,0.16),c(0.06,0.12),c(2000,4000),c(1,5),c(2,20),c(5,50),c(5,50),c(5,15),c(5,25))
#LUT Attempt
#Read spreadsheet names from FFH_LUTs.xlsx
#LUT_In<- excel_sheets(file.path(ESIDir,'Water/FFH_LUTs.xlsx'))
#Subsequent sheets are veg plots
#x<-LUT_In[1:length(LUT_In)]
#LUT_List<-lapply(x,function(x) {
#  read_excel(file.path(ESIDir,'Water/FFH_LUTs.xlsx'), sheet=x)
#})
#names(LUT_List) <- x
#or create LUTs
#eg.
#Aquatic_Life_Support	Aquatic_Life_Support_flag
#High	High
#Low	Low
#Medium	Medium
#<<<<<<< Updated upstream
#Aquatic_Life_Support (Yes/No)
#R code for generating LUT
#=======
#LUTexample<-read.table(file = file.path(ESIDir,"Water/Aquatic_Life_Support_LUT.csv"))
#Aquatic_Life_Support (Yes/No)
#>>>>>>> Stashed changes
#Aquatic_Life_Support_LUT<-data.frame(Aquatic_Life_Support=
#                          sort(unique(Wetlands.spatial$Aquatic_Life_Support)),
#                          Aquatic_Life_Support_flag=c('High','Low','Medium'))
#End
#Load all the data
source("01_load.R")
View(Wshd)
mapview(Wshd)
mapview(ESI)
mapview(Wshd) + mapview(ESI)
Wshd_gdb <- list.files(file.path(FFHSpatialDir), pattern = ".gdb", full.names = TRUE)[1]#SSAF_ESI_T1_FFH.gdb
Wshd_list <- st_layers(Wshd_gdb)
FFH_Watershed<-read_sf(Wshd_gdb, layer = "SSAF_2020_ForCode_201201") %>%
st_transform(3005) %>%
st_buffer(0) %>% #fix for self-intersection issues
st_intersection(AOI.spatial)
mapview(FFH_Watershed)
View(Wshd_list)
Wshd_list
Pt_file <- file.path("tmp/waterpt")
if (!file.exists(Pt_file)) {
FFH_XY <- st_centroid(FFH_Watershed)
ffhpt <- st_coordinates(FFH_XY)
ffhpt <- FFH_XY %>%
cbind(ffhpt) %>%
st_drop_geometry()
waterpt <- st_as_sf(ffhpt, coords= c("X","Y"), crs = 3005) %>%
st_intersection(AOI.spatial)
waterpt <- waterpt %>%
mutate(wet_id=as.numeric(rownames(waterpt)))
#st_crs(waterpt)<-3005
saveRDS(waterpt, file = Pt_file)
write_sf(waterpt, file.path(spatialOutDir,"FFH_waterpt.gpkg"))
}
waterpt<-readRDS(Pt_file)
View(waterpt)
ffh_file <- file.path("tmp/ffh.spatial")
if (!file.exists(ffh_file)) {
Wshd_pts <-st_intersection(waterpt, MajorWshd) %>%
st_drop_geometry() %>%
dplyr::select('WATERSHED_FEATURE_ID', 'MWshd')
colnames(watersheds_context)
colnames(Wshd)
colnames(FFH_Watershed)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
IndicatorsW
View(ffh.spatial)
Watersheds_Context
colnames(Watersheds_Context)
ffh.spatial<-FFH_Watershed %>%
left_join(Wshd_pts, by='WATERSHED_FEATURE_ID')
if (!file.exists(ffh_file)) {
Wshd_pts <-st_intersection(waterpt, MajorWshd) %>%
st_drop_geometry() %>%
dplyr::select('WATERSHED_FEATURE_ID', 'MWshd')
#join back to FFH_Watershed
ffh.spatial<-FFH_Watershed %>%
left_join(Wshd_pts, by='WATERSHED_FEATURE_ID')
saveRDS(ffh.spatial, file = ffh_file)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
View(Watersheds_Context)
View(Wshd_list)
Wshds.used <- subset(Watersheds_Context, MWshd %in% Wshd.context)
nameWshd<-data.frame(Wshd_NAME=Wshds.used$MWshd)
View(Indicators_df)
lapply(Indicators_df, range)
Indicators_df
Indicators_df$Rip_Tot_All_Dstrb_PCNT
min(Indicators_df$Rip_Tot_All_Dstrb_PCNT)
max(Indicators_df$Rip_Tot_All_Dstrb_PCNT)
table(Indicators_df$Rip_Tot_All_Dstrb_PCNT)
lapply(Indicators_df, range, na.rm = TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
Watersheds_Context
colname("Watersheds_Context")
colname(Watersheds_Context)
colnames(Watersheds_Context)
Rip_Tot_All_Dstrb_PCNT
Watersheds_Context(Rip_Tot_All_Dstrb_PCNT)
View(Watersheds_Context)
Indicators_df
colnames(Indicators_df)
colnames(Watersheds_Context)
Watersheds_Context<-Watersheds_Context %>%
mutate(ECA_Final_PCNT=ifelse(ECA_Final_PCNT>100,0,ECA_Final_PCNT))
mutate(Rip_Tot_All_Dstrb_PCNT=ifelse(is.na(Rip_Tot_All_Dstrb_PCNT),0,Rip_Tot_All_Dstrb_PCNT))
is.na(Rip_Tot_All_Dstrb_PCNT)
View(Indicators_df)
Indicators_df<-Watersheds_Context[IndicatorsW]
lapply(Indicators_df, range, na.rm = TRUE)
range(Watersheds_Context)
Watersheds_Context(range(ECA_Final_PCNT))
range(Watersheds_Context(ECA))
range(ECA)
Watersheds_Context
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
mapview(waterpt)
mapview(waterpt)
library(sf)
library(rgdal)
library(dplyr)
library(plyr)
library(readr)
library(raster)
library(bcmaps)
library(bcdata)
library(fasterize)
library(tidyr)
library(rio)
library(WriteXLS)
library(ggplot2)
library(readxl)
library(stringr)
library(mapview)
library(gdata)
library(reshape2)
library(exactextractr)
library(plotKML)
library(purrr)
library(lubridate)
library(tibble)
library(janitor)
library(magrittr)
library(igraph)
library(rgeos)
library(rlist)
mapview(waterpt)
source('header.R')
#Input variables - passed to subsequent script
AOI<-'SkeenaESI'
Wshd.context<-c('Nechako','SkeenaE','SkeenaW','Nass','Coastal')
#Indicators selected for summarizing
#Full
IndicatorsW<-c('ECA_Final_PCNT', 'Rd_Density_net', 'AU_TOT_Disturb_all_PCNT', 'DDR_Score', 'Pnt_Src_Plltn_Final_Count', 'Rip_Tot_All_Dstrb_PCNT', 'Second_Growth_PCNT_net')
#Test Size
#IndicatorsW<-c('ECA_Final_PCNT', 'Rd_Density_net','Dam_Lines_Count', 'Rip_Tot_All_Dstrb_PCNT', 'Salmonid_hab_KM', 'Spawning_Total_KM')
IndicatorsW_Label <- c('ECA','Road density', 'Total Land Disturbance', 'Drainage Density Ruggedness', 'Point Source Pollution', 'Riparian Distrubance', 'Amount of 2nd Growth', 'Modelled Salmon Habitat', 'Spawning Habitat')
IndUnits <- c('%','km/km2', '%', '#/km2', 'km/km2', 'km/km2', 'Score', '#', '%', '%', 'Km', 'Km')
Thresh <- list(c(15,20),c(.4,1.2),c(25,75),c(2000,4000),c(1,5),c(5,15),c(5,25), c(50, 200), c(5, 20))
#LUT Attempt
#Read spreadsheet names from FFH_LUTs.xlsx
#LUT_In<- excel_sheets(file.path(ESIDir,'Water/FFH_LUTs.xlsx'))
#Subsequent sheets are veg plots
#x<-LUT_In[1:length(LUT_In)]
#LUT_List<-lapply(x,function(x) {
#  read_excel(file.path(ESIDir,'Water/FFH_LUTs.xlsx'), sheet=x)
#})
#names(LUT_List) <- x
#or create LUTs
#eg.
#Aquatic_Life_Support	Aquatic_Life_Support_flag
#High	High
#Low	Low
#Medium	Medium
#<<<<<<< Updated upstream
#Aquatic_Life_Support (Yes/No)
#R code for generating LUT
#=======
#LUTexample<-read.table(file = file.path(ESIDir,"Water/Aquatic_Life_Support_LUT.csv"))
#Aquatic_Life_Support (Yes/No)
#>>>>>>> Stashed changes
#Aquatic_Life_Support_LUT<-data.frame(Aquatic_Life_Support=
#                          sort(unique(Wetlands.spatial$Aquatic_Life_Support)),
#                          Aquatic_Life_Support_flag=c('High','Low','Medium'))
#End
#Load all the data
source("01_load.R")
mapview(waterpt)
mapview(waterpt) + mapview(Wshd)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/header.R', echo=TRUE)
source('C:/Users/JWFRASER/R/SSAF_FFH_Summary/Run_ESI.R', echo=TRUE)
View(Boxplots)
print(IndL[1])
print(IndUnits[1])
print(IndUnits[j])
print(use.units)
print(quote(InU))
quoute(InU)
quote(InU)
print(InU)
IndUnits[j]
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
IndU
print(InU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
IndU
use.units=quote(InU)
use.units
use.units=quote(IndU)
use.units
units
use.units="Km/KM2"
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
View(Box.2)
use.units
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
use.units
use.xlab
use.xlab=expression(IndL)
use.xlab
View(Box.2)
View(Box.2)
expression(IndL)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
use.units
use.units[1]
type(use.units)
use.units(type)
use.unit.type
name = use.units
name
name = quote(use.units)
name
name = use.units
print name
name
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
IndU
IndU
use.units
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
Boxplots(AOI, Wshd.name, Wshd.name, figsOutDir, dataOutDir, Ind, IndL,Thrsh, IndU)
View(Box.2)
View(Boxplots)
View(Boxplots)
View(Boxplots)
